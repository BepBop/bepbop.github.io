---

---

<div id="jobs">
  <div class="div2">
    <div class="title">
      <div class="job-title-container">
        <div class="now">Now</div>
        <div class="job-title">UI UX Designer</div>
        <div class="sub-header-2">@LeadSquared</div>
      </div>
      <div class="title-year">2023-24</div>
    </div>
    <div class="paragraph">
      <ol>
        <li class="bold">Product Building From Zero, Pop-Up</li>
        <li>
          Product Feature
          <ol class="sub-list">
            <li>Mobile Editor</li>
            <li>Hide on Desktop</li>
            <li>Responsive Preview, Responsive Images, etc.</li>
          </ol>
        </li>
        <li>AI Template Selector</li>
        <li>Creation of New Components for Design System</li>
      </ol>
    </div>
  </div>
  <div class="div1">
    <div class="title">
      <div class="job-title-container">
        <div class="job-title">Associate UI UX Designer</div>
        <div class="sub-header-2">@LeadSquared</div>
      </div>
      <div class="title-year">2022</div>
    </div>
    <div class="paragraph">
      <ol>
        <li>Building Design System</li>
        <li class="bold">Product Building From Zero, Landing Pages Pro</li>
        <li>
          Product Features
          <ol class="sub-list">
            <li>For Sales Users</li>
            <li>For Implementation Teams</li>
          </ol>
        </li>

        <li>User Research & Usability Testing</li>
      </ol>
    </div>
  </div>
  <div class="div3">
    <div class="title">
      <div class="job-title-container">
        <div class="job-title">B.Tech CSE</div>
        <div class="sub-header-2">@LPU</div>
      </div>
      <div class="title-year">2019-23</div>
    </div>
    <div class="paragraph">
      <ol>
        <li>Pong Video Game</li>
        <li class="bold">Urban Sports Club & Beta Wesbites</li>
        <li>Story Generator, using Tkinter and ML</li>
        <li>Mini React Apps, Stopwatch and To-Do List</li>
      </ol>
    </div>
  </div>
  <div class="div4">
    <span></span>
  </div>
</div>

<style>
  ol {
    list-style-type: square;
  }

  ol.sub-list {
    list-style-type: disc;
  }

  li {
    padding: 5.2px 0;
  }

  #jobs {
    display: grid;
    grid-template: repeat(10, 1fr) / repeat(24, 1fr);
    gap: 0;
    width: 100%;
    min-height: 720px;
    margin: 48px auto;
    max-width: 1336px;
    background: white;
    @media (width <= 1000px) {
      margin: 64px auto;
      display: flex;
      flex-flow: column;
      overflow: scroll;
      gap: 24px;
      height: 720px;
      //grid-template: repeat(16, 72px) / repeat(24, 1fr);
    }

    > div {
      transition:
        transform 0.3s ease,
        z-index 0.1s ease;
      box-shadow: 0 0 20px 28px rgba(250, 250, 251, 0.4);
      border: 1px solid rgba(8, 8, 10, 0.04);
      background: white;
      padding: 32px 32px 20px 32px;
      display: flex;
      flex-direction: column;

      @media (width <= 1000px) {
        padding: 28px 24px 20px 24px;
        border: 1px solid rgba(8, 8, 10, 0.1);

        & ol {
          padding-left: 24px;
        }
      }
    }
  }

  .div1 {
    grid-area: 2 / 2 / 8 / 16;
    z-index: 5;
    //background: red !important;

    @media (width <= 1000px) {
    }
  }

  .div2 {
    grid-area: 4 / 9 / 11 / 24;
    z-index: 15;
    //background: black !important;
    @media (width <= 1000px) {
    }
  }

  .div3 {
    grid-area: 5 / 4 / 10 / 17;
    z-index: 10;
    //background: saddlebrown !important;
    @media (width <= 1000px) {
    }
  }

  .div4 {
    grid-area: 3 / 12 / 11/ 21;
    z-index: 0;
    padding: 12px 0;

    > span {
      background: url("/img/summary.svg") center no-repeat;
      width: 100%;
      height: 100%;
      background-size: contain;
      @media (width <= 1000px) {
        height: 480px;
      }
    }
  }

  .title {
    display: flex;
    justify-content: space-between;
    align-items: center;
    align-self: stretch;

    @media (width <= 1000px) {
      align-items: flex-start;
      flex-direction: column;
      gap: 8px;
    }

    .job-title-container {
      display: flex;
      flex-direction: column;
      gap: 8px;
      align-items: flex-start;
      font-family: var(--font-sans);
      flex: 1 1 0;

      .job-title {
        color: var(--black3);
        font-size: var(--font-size-12);
        font-weight: 500;
        text-transform: uppercase;

        @media (width <= 1000px) {
          font-size: var(--font-size-11);
          //width: 96%;
        }
      }

      .now {
        background: var(--green);
        border-radius: 24px;
        padding: 4px 12px;
        color: var(--black);
        font: 500 1rem var(--font-sans);
      }
    }

    .title-year {
      color: rgba(0, 0, 0, 0.25);
      font: 400 var(--font-size-16) var(--font-mono);
      @media (width <= 1000px) {
        font-size: var(--font-size-10);
      }
    }
  }

  .paragraph {
    color: var(--black3);
    font: 400 var(--font-size-9) var(--font-sans);
    position: relative;
    align-self: stretch;

    @media (width <= 1000px) {
      font-size: var(--font-size-8);
    }
  }
</style>

<script is:inline>
  // Select the parent container and all child divs
  const jobsContainer = document.getElementById("jobs");
  const jobDivs = jobsContainer.querySelectorAll("#jobs > div");

  // Store the original z-index values
  const originalZIndex = Array.from(jobDivs).map(
    (div) => getComputedStyle(div).zIndex,
  );

  // Function to handle mouse enter
  function handleMouseEnter(event) {
    const hoveredDiv = event.target;

    jobDivs.forEach((div) => {
      if (div === hoveredDiv) {
        div.style.transform = "scale(1.05)";
        div.style.zIndex = "1000"; // Ensure hovered div is on top
        div.style.boxShadow = "0px 0px 300px 400px rgba(255, 255, 255, 0.8)";
      }
    });
  }

  // Function to handle mouse leave
  function handleMouseLeave() {
    jobDivs.forEach((div, index) => {
      div.style.transform = "scale(1)";
      div.style.zIndex = originalZIndex[index]; // Reset to original z-index
      div.style.boxShadow = "0 0 8px 16px rgba(250, 250, 251, 0.3)";
    });
  }

  jobDivs.forEach((div) => {
    if (window.innerWidth >= 1000) {
      div.addEventListener("mouseenter", handleMouseEnter);
      div.addEventListener("mouseleave", handleMouseLeave);
    }
  });
</script>
